<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>老麵的全端攻城航海誌</title>
  
  <subtitle>網頁學習筆記</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://abler0122.github.io/"/>
  <updated>2018-03-26T08:51:40.986Z</updated>
  <id>http://abler0122.github.io/</id>
  
  <author>
    <name>Old Man</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[航向Laravel]Blade模板-Day3</title>
    <link href="http://abler0122.github.io/2018/03/26/%5B%E8%88%AA%E5%90%91Laravel%5DBlade%E6%A8%A1%E6%9D%BF-Day3/"/>
    <id>http://abler0122.github.io/2018/03/26/[航向Laravel]Blade模板-Day3/</id>
    <published>2018-03-26T04:33:41.000Z</published>
    <updated>2018-03-26T08:51:40.986Z</updated>
    
    <content type="html"><![CDATA[<p>Blade模板放置於<code>resources/views</code>資料夾中，檔案副檔名為<code>.blade.php</code>。<br><a id="more"></a></p><h2 id="回傳資料"><a href="#回傳資料" class="headerlink" title="回傳資料"></a>回傳資料</h2><p>如果要回傳資料，像是PHP的echo，使用兩個大括號包覆<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; $var &#125;&#125; <span class="comment">// <span class="meta">&lt;?php</span> echo $var; <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><h2 id="模板繼承"><a href="#模板繼承" class="headerlink" title="模板繼承"></a>模板繼承</h2><p>在做頁面的時候我們會將頁面中相同的部分(區塊)切成模板，這樣容易修改、維護。</p><h4 id="🔹定義頁面layout"><a href="#🔹定義頁面layout" class="headerlink" title="🔹定義頁面layout"></a>🔹定義頁面layout</h4><p>以下範例是原始的HTML</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>老麵全端航海誌 首頁<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在不同的頁面nav跟footer是相同不變的，所以做成layout，<br><code>@yield</code>是指定被用來顯示給定區塊的內容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- resources/views/layouts/master.blade.php --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>老麵全端航海誌 @yield('title')<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">      @yield('content')</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="🔹繼承頁面layout"><a href="#🔹繼承頁面layout" class="headerlink" title="🔹繼承頁面layout"></a>🔹繼承頁面layout</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- resources/views/index.blade.php --&gt;</span><br><span class="line"></span><br><span class="line">@extends(<span class="string">'layouts.master'</span>) <span class="comment">// 繼承master模板</span></span><br><span class="line"></span><br><span class="line">@section(<span class="string">'title'</span>, <span class="string">'首頁'</span>)</span><br><span class="line"></span><br><span class="line">@section(<span class="string">'content'</span>)</span><br><span class="line"></span><br><span class="line">    &lt;p&gt;主要內容區塊&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">@endsection</span><br></pre></td></tr></table></figure><h2 id="控制結構"><a href="#控制結構" class="headerlink" title="控制結構"></a>控制結構</h2><h4 id="🔹條件式"><a href="#🔹條件式" class="headerlink" title="🔹條件式"></a>🔹條件式</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">if</span> (count($data) == <span class="number">1</span>)</span><br><span class="line">    <span class="comment">// 一筆資料</span></span><br><span class="line">@<span class="keyword">elseif</span> (count($data) &gt; <span class="number">1</span>)</span><br><span class="line">    <span class="comment">// 多條資料</span></span><br><span class="line">@<span class="keyword">else</span></span><br><span class="line">    <span class="comment">// 沒有任何資料</span></span><br><span class="line">@<span class="keyword">endif</span></span><br></pre></td></tr></table></figure><h4 id="🔹迴圈"><a href="#🔹迴圈" class="headerlink" title="🔹迴圈"></a>🔹迴圈</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">10</span>; $i++)</span><br><span class="line">  &#123;&#123; $i &#125;&#125;</span><br><span class="line">@<span class="keyword">endfor</span></span><br><span class="line"></span><br><span class="line">@<span class="keyword">foreach</span> ($users <span class="keyword">as</span> $user)</span><br><span class="line">  &#123;&#123; $user-&gt;id &#125;&#125;</span><br><span class="line">@<span class="keyword">endforeach</span></span><br><span class="line"></span><br><span class="line">@forelse ($users <span class="keyword">as</span> $user)</span><br><span class="line">  &#123;&#123; $user-&gt;name &#125;&#125;</span><br><span class="line">@<span class="keyword">empty</span></span><br><span class="line">  <span class="comment">// 沒有使用者</span></span><br><span class="line">@endforelse</span><br><span class="line"></span><br><span class="line">@<span class="keyword">while</span> (<span class="keyword">true</span>)</span><br><span class="line">  <span class="comment">// while迴圈</span></span><br><span class="line">@<span class="keyword">endwhile</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Blade模板放置於&lt;code&gt;resources/views&lt;/code&gt;資料夾中，檔案副檔名為&lt;code&gt;.blade.php&lt;/code&gt;。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[航向Laravel]路由設定Route-Day2</title>
    <link href="http://abler0122.github.io/2018/03/05/%5B%E8%88%AA%E5%90%91Laravel%5D%E8%B7%AF%E7%94%B1%E8%A8%AD%E5%AE%9ARoute-Day2/"/>
    <id>http://abler0122.github.io/2018/03/05/[航向Laravel]路由設定Route-Day2/</id>
    <published>2018-03-05T05:11:11.000Z</published>
    <updated>2018-03-05T07:22:14.038Z</updated>
    
    <content type="html"><![CDATA[<p>Laravel路由設定-📓筆記<br><a id="more"></a></p><h2 id="設定檔位置"><a href="#設定檔位置" class="headerlink" title="設定檔位置"></a>設定檔位置</h2><p>所有Laravel路由的設定都是在<code>routes/web.php</code>檔案中，另外<code>routes/api.php</code>是用來設定API路由</p><h2 id="定義路由"><a href="#定義路由" class="headerlink" title="定義路由"></a>定義路由</h2><p>在設定檔中可以看到已經有預設的路由，依照上次的環境設定<a href="/2018/02/26/[航向Laravel]開發環境建置Homestead-Day1/" title="[航向Laravel]開發環境建置Homestead-Day1">([航向Laravel]開發環境建置Homestead-Day1)</a>IP是<code>192.168.10.1</code>，所以用瀏覽器開啟連結<code>http://192.168.10.10/</code>可以看到Laravel歡迎頁面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">'welcome'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="路由動詞"><a href="#路由動詞" class="headerlink" title="路由動詞"></a>路由動詞</h2><p>當然可以使用HTTP動詞，如果需要一次用到多個動詞，<code>any</code>或是 <code>match</code>是個好選擇<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;&#125;);</span><br><span class="line"></span><br><span class="line">Route::post(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;&#125;);</span><br><span class="line"></span><br><span class="line">Route::put(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;&#125;);</span><br><span class="line"></span><br><span class="line">Route::delete(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;&#125;);</span><br><span class="line"></span><br><span class="line">Route::any(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;&#125;);</span><br><span class="line"></span><br><span class="line">Route::match([<span class="string">'get'</span>, <span class="string">'post'</span>], <span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;&#125;);</span><br></pre></td></tr></table></figure></p><h2 id="回傳View"><a href="#回傳View" class="headerlink" title="回傳View"></a>回傳View</h2><p>只要在funtion中，加入<code>return view()</code>並指定模版，就可以回傳View<br>View的模板是放在<code>resources/views/</code>目錄底下，預設會有個<code>welcome.blade.php</code>是歡迎頁面的模板</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">'welcome'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="搭配控制器使用"><a href="#搭配控制器使用" class="headerlink" title="搭配控制器使用"></a>搭配控制器使用</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>, <span class="string">'controller@index'</span>); <span class="comment">// &#123;控制器名稱&#125;@&#123;控制器的方法&#125;</span></span><br></pre></td></tr></table></figure><h2 id="加入路由參數"><a href="#加入路由參數" class="headerlink" title="加入路由參數"></a>加入路由參數</h2><p>例如：取得指定文章編號(id)<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'posts/&#123;id&#125;'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($id)</span> </span>&#123;&#125;);</span><br></pre></td></tr></table></figure></p><p>多個參數<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'posts/&#123;date&#125;/&#123;id&#125;/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($date, $id)</span> </span>&#123;&#125;);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Laravel路由設定-📓筆記&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[航向Laravel]開發環境建置Homestead-Day1</title>
    <link href="http://abler0122.github.io/2018/02/26/%5B%E8%88%AA%E5%90%91Laravel%5D%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AEHomestead-Day1/"/>
    <id>http://abler0122.github.io/2018/02/26/[航向Laravel]開發環境建置Homestead-Day1/</id>
    <published>2018-02-26T07:18:48.000Z</published>
    <updated>2018-02-26T07:37:18.347Z</updated>
    
    <content type="html"><![CDATA[<p>Laravel提供快速方便的環境建置方式-Homestead<br><a id="more"></a></p><h2 id="Homestead預設環境"><a href="#Homestead預設環境" class="headerlink" title="Homestead預設環境"></a>Homestead預設環境</h2><ul><li>Ubuntu 14.04</li><li>Git</li><li>PHP 5.6 / 7.0</li><li>Nginx</li><li>MySQL<br>……</li></ul><h2 id="安裝Homestead"><a href="#安裝Homestead" class="headerlink" title="安裝Homestead"></a>安裝Homestead</h2><p>首先下載/安裝好VirtualBox或是VMWare，之後在安裝Vagrant。<br>接下來安裝Vagrant Box，在終端機執行下列指令，通常會需要一段時間可以先去睡😴😴😴<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant box add laravel/homestead</span><br></pre></td></tr></table></figure></p><p>下載Homestead的Vagrant設定檔，用Git clone下來<a href="/2017/12/13/如果Git能夠喚回曾經的code-Git版本控制入門篇/" title="如果Git能夠喚回曾經的code-Git版本控制入門篇">(如果Git能夠喚回曾經的code-Git版本控制入門篇)</a>，並執行init.bat / init.sh，產生Hometestead.yaml<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/laravel/homestead.git Homestead</span><br></pre></td></tr></table></figure></p><h2 id="設定Homestead檔"><a href="#設定Homestead檔" class="headerlink" title="設定Homestead檔"></a>設定Homestead檔</h2><p>Hometestead.yaml是用來設定環境的配置</p><ul><li><p>ip:  設定local端的IP位置</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ip:</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.10</span></span><br></pre></td></tr></table></figure></li><li><p>memory: 配給虛擬機記憶體的大小</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">memory:</span> <span class="number">2048</span></span><br></pre></td></tr></table></figure></li><li><p>cpus: 配給虛擬機CPU的個數</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cpus:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>provider: Vagrant的提供者</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">provider:</span> <span class="string">virtualbox</span></span><br></pre></td></tr></table></figure></li><li><p>authorize: ssh key位置</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">authorize:</span> <span class="string">~/.ssh/id_rsa.pub</span></span><br></pre></td></tr></table></figure></li><li><p>folders: 設定共享目錄</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">folders:</span></span><br><span class="line"><span class="attr">    - map:</span> <span class="attr">C:\code\</span></span><br><span class="line"><span class="attr">    to:</span> <span class="string">/home/vagrant/code/</span></span><br></pre></td></tr></table></figure></li><li><p>sites: 設定網域與共享目錄</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sites:</span></span><br><span class="line"><span class="attr">    - map:</span> <span class="string">homestead.test</span></span><br><span class="line"><span class="attr">    to:</span> <span class="string">/home/vagrant/code/public</span></span><br></pre></td></tr></table></figure></li><li><p>port: 轉port設定</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ports:</span></span><br><span class="line"><span class="attr">    - send:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    to:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="啟動Vagrant囉"><a href="#啟動Vagrant囉" class="headerlink" title="啟動Vagrant囉~"></a>啟動Vagrant囉~</h2><p>在Homestead目錄下輸入指令啟動Vagrant<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Vagrant</span> <span class="string">up</span></span><br></pre></td></tr></table></figure></p><p>遠端連線<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Vagrant</span> <span class="string">ssh</span></span><br></pre></td></tr></table></figure></p><p>建立Laravel專案<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">laravel</span> <span class="string">new</span> <span class="string">專案名稱</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Laravel提供快速方便的環境建置方式-Homestead&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如果Git能夠喚回曾經的code-Git版本控制入門篇</title>
    <link href="http://abler0122.github.io/2017/12/13/%E5%A6%82%E6%9E%9CGit%E8%83%BD%E5%A4%A0%E5%96%9A%E5%9B%9E%E6%9B%BE%E7%B6%93%E7%9A%84code-Git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%85%A5%E9%96%80%E7%AF%87/"/>
    <id>http://abler0122.github.io/2017/12/13/如果Git能夠喚回曾經的code-Git版本控制入門篇/</id>
    <published>2017-12-13T12:22:26.000Z</published>
    <updated>2018-02-22T06:10:17.843Z</updated>
    
    <content type="html"><![CDATA[<p>使用Git可以讓時光倒回🕑 ，喚回曾經你/妳的code。<br><a id="more"></a></p><h2 id="什麼是Git"><a href="#什麼是Git" class="headerlink" title="什麼是Git?"></a>什麼是Git?</h2><p>Git出自於Linux之父”Linux Torbalds”在開發Linux kernel的時候，設計出來版本控制系統，當時的版本控制系統大多屬於集中式版本控制系統 (Centralized Version Control Systems，簡稱CVCSs)，Git的話是屬於分散式版本控制系統 (Distributed Version Control Systems, 簡稱DVCSs) ，什麼是集中式版本控制系統跟散式版本控制系統 就自己去研究吧。目前大多數的開放原始碼專案、儲存庫都是採用Git，像是知名的可以沒有女友，但不可以沒有的Github，還有Bitbucket、Gitlab，所以Git已經算是必學的工具了。</p><h2 id="為何要用Git"><a href="#為何要用Git" class="headerlink" title="為何要用Git?"></a>為何要用Git?</h2><p>為何要用Git呢?，像剛剛說的大多數專案都採用Git，當然要好好的學一下。 另外大家想想以往在做報告、作業的時候是如何管理版本、整合整組的報告，絕大多數的人應該都是把檔案複製一份放在用日期或是版本命名的目錄，這種做法很簡單，但是沒辦法容易看出版本的差異跟有效的管理。如果使用Git，它可以紀錄版本的差異，還有版本之間合併、時光倒回🕑的功能。</p><h2 id="如何使用Git"><a href="#如何使用Git" class="headerlink" title="如何使用Git?"></a>如何使用Git?</h2><p>首先要安裝Git，選擇你/妳使用的作業系統版本下載&amp;安裝。安裝完後要設定使用者名稱跟信箱才可以使用，之後提交的版本都會使用這些資訊，開啟Git bash輸入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"使用者名稱(前後要加雙引號)"</span></span><br><span class="line">$ git config --global user.email 信箱</span><br></pre></td></tr></table></figure><h4 id="🔹初始化"><a href="#🔹初始化" class="headerlink" title="🔹初始化"></a>🔹初始化</h4><p>如果想要使用Git在某資料中，需要進入該資料夾然後輸入以下指令，該指令會建立一個.git的資料夾，裡面是放著紀錄的檔案：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><h4 id="🔹查看狀態"><a href="#🔹查看狀態" class="headerlink" title="🔹查看狀態"></a>🔹查看狀態</h4><p>如果在資料夾中新增或是修改檔案，可以用指令查看狀態：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><h4 id="🔹提交版本"><a href="#🔹提交版本" class="headerlink" title="🔹提交版本"></a>🔹提交版本</h4><p>若要提交版本需要先將檔案加入追蹤，後才能提交版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add 檔案或資料夾名稱(可以輸入 ./ 選擇全部檔案)</span><br><span class="line">$ git commit -m <span class="string">"版本訊息"</span></span><br></pre></td></tr></table></figure><div class="tip"><br>建議在每次使用Git指令時，先查看目前狀態，再三確認過才進行下一步<br></div><h4 id="🔹查看版本紀錄"><a href="#🔹查看版本紀錄" class="headerlink" title="🔹查看版本紀錄"></a>🔹查看版本紀錄</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><div class="tip"><br>輸入q離開喔<br></div><h4 id="🔹建立-amp-切換分支"><a href="#🔹建立-amp-切換分支" class="headerlink" title="🔹建立&amp;切換分支"></a>🔹建立&amp;切換分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git branch 要建立的分支名稱</span><br><span class="line">$ git checkout  分支名稱</span><br></pre></td></tr></table></figure><h4 id="🔹克隆-clone-遠端儲存庫"><a href="#🔹克隆-clone-遠端儲存庫" class="headerlink" title="🔹克隆(clone)遠端儲存庫"></a>🔹克隆(clone)遠端儲存庫</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> 遠端儲存庫</span><br></pre></td></tr></table></figure><h4 id="🔹上傳-更新版本"><a href="#🔹上傳-更新版本" class="headerlink" title="🔹上傳/更新版本"></a>🔹上傳/更新版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin 分支名稱</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure><h4 id="🔹合併版本"><a href="#🔹合併版本" class="headerlink" title="🔹合併版本"></a>🔹合併版本</h4><p>先切換到要合併進來的分支，然後執行以下指令，例如：A合併到B，要先切換到B分支，執行git merge A</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge 分支名稱</span><br></pre></td></tr></table></figure><h2 id="WTF-😵所以如何在團隊開發中使用Git"><a href="#WTF-😵所以如何在團隊開發中使用Git" class="headerlink" title="WTF???😵所以如何在團隊開發中使用Git"></a>WTF???😵所以如何在團隊開發中使用Git</h2><p>如果是小專案或是專題，可以嘗試使用Github Flow，這就先自己去研究😜，之後在分享囉🍻~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用Git可以讓時光倒回🕑 ，喚回曾經你/妳的code。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Coding閒聊碎碎念20170922</title>
    <link href="http://abler0122.github.io/2017/09/22/Coding%E9%96%92%E8%81%8A%E7%A2%8E%E7%A2%8E%E5%BF%B520170922/"/>
    <id>http://abler0122.github.io/2017/09/22/Coding閒聊碎碎念20170922/</id>
    <published>2017-09-22T07:48:00.000Z</published>
    <updated>2018-02-26T07:32:37.865Z</updated>
    
    <content type="html"><![CDATA[<p>最近終於完成開發許久的運動資訊網站，來碎念一下😝<br><a id="more"></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近終於完成開發許久的運動資訊網站，雖然只是擔任程式開發成員在寫程式，但是還是有一些心得和大家分享。<br>這次開發的網站，有別於我以前開發過的網站，以前開發過都是形象網站，主要是文章管理或是上傳檔案等等功能，而且使用者都是來看看網站而已，而這次所開發的運動資訊網站比較像是一個應用程式，使用者登入後可以看到或查詢自己的資料，還有報名活動，註冊等等…<!-- more -->,雖然感覺上都是做新增修改刪除讀取的功能啊~，但差別在於需要考慮使用者操作順不順暢，還有畫面重新載入換頁等等關於畫面操作流程的問題。<br>另外在團隊開發過程中有遇到程式碼版本合併衝突問題，日後再來分享。</p><h2 id="使用好的工具效率增倍"><a href="#使用好的工具效率增倍" class="headerlink" title="使用好的工具效率增倍"></a>使用好的工具效率增倍</h2><p>開發網站一定會使用到編輯器，來分享我在使用的工具，我使用的編輯器是Vistual Studio Code搭配GitLen套件， 另外使用三個螢幕(筆電螢幕 +外接螢幕+外接螢幕)，我的筆電可以使用HDMI跟VGA可以同時使用， 最後還有一個最重要的東西就是我的Debug神器「泰迪」，手腕痛時可以當作滑鼠手腕墊。</p><ul><li>Vistual Studio Code 編輯器<ul><li>GitLen</li></ul></li><li>三螢幕(筆電螢幕 +外接螢幕+外接螢幕)</li><li>泰迪</li></ul><h2 id="一些心得碎念"><a href="#一些心得碎念" class="headerlink" title="一些心得碎念"></a>一些心得碎念</h2><p>在專案中我主要是在開發資料跟畫面串接，在這部分考慮到使用者操作流暢，打算用Ajax非同步讀。取資料的方式，另外我是用jQuery(心裡想：應該用個Vuejs等等前端框架)，但是因為時間很趕，要開發API又要處理前端的部分，所以就先選擇用jQuery日後有機會再來改，其實後來有點後悔，因為沒想到畫面有許多資料要處理，jQuery畢竟只是Library，程式架構跟流程都要自己設計。<br>專案結束後也是在這閒聊時，開始接觸到Vuejs，回頭看之前寫的jQuery，忘了差不多了…。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近終於完成開發許久的運動資訊網站，來碎念一下😝&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
