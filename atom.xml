<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>老麵船長全端誌-OldMan&#39;s Blog</title>
  
  <subtitle>網頁學習筆記</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://abler0122.github.io/"/>
  <updated>2018-11-14T13:33:49.881Z</updated>
  <id>http://abler0122.github.io/</id>
  
  <author>
    <name>老麵(Old Man)</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[Laravel筆記]表單驗證Validation - Day7</title>
    <link href="http://abler0122.github.io/2018/11/14/%5BLaravel%E7%AD%86%E8%A8%98%5D%E8%A1%A8%E5%96%AE%E9%A9%97%E8%AD%89Validation-Day7/"/>
    <id>http://abler0122.github.io/2018/11/14/[Laravel筆記]表單驗證Validation-Day7/</id>
    <published>2018-11-14T06:33:22.000Z</published>
    <updated>2018-11-14T13:33:49.881Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="控制器加入驗證"><a href="#控制器加入驗證" class="headerlink" title="控制器加入驗證"></a>控制器加入驗證</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// app/Http/Controllers/ArticleController.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Auth</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Article</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新文章。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  Request  $request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 加入驗證</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        $validatedData = $request-&gt;validate([</span><br><span class="line">            <span class="string">'title'</span> =&gt; <span class="string">'required|max:255'</span>,</span><br><span class="line">            <span class="string">'content'</span> =&gt; <span class="string">'required'</span>,</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        Article::where(<span class="string">'id'</span>, $request-&gt;id)-&gt;update([</span><br><span class="line">            <span class="string">'title'</span> =&gt; $request-&gt;title,</span><br><span class="line">            <span class="string">'content'</span> =&gt; $request-&gt;content,</span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="錯誤顯示"><a href="#錯誤顯示" class="headerlink" title="錯誤顯示"></a>錯誤顯示</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// view</span></span><br><span class="line">&lt;form action=<span class="string">"&#123;&#123; route('article.update') &#125;&#125;"</span> method=<span class="string">"POST"</span>&gt;</span><br><span class="line">    &#123;&#123; csrf_field() &#125;&#125;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> name=<span class="string">"title"</span>&gt;</span><br><span class="line">    <span class="comment">//錯誤顯示</span></span><br><span class="line">    @<span class="keyword">if</span> ($errors-&gt;has(<span class="string">'title'</span>))</span><br><span class="line">        &lt;strong&gt;&#123;&#123; $errors-&gt;first(<span class="string">'title'</span>) &#125;&#125;&lt;/strong&gt;</span><br><span class="line">    @<span class="keyword">endif</span></span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h2 id="客製化驗證"><a href="#客製化驗證" class="headerlink" title="客製化驗證"></a>客製化驗證</h2><p>當需要複雜的驗證與客製錯誤訊息時，可建立自己的<code>form request</code>，使用<code>make:request</code>指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:request UpdateBlogPost</span><br></pre></td></tr></table></figure><p>執行後會建立在<code>app/Http/Requests</code>目錄下，在<code>rules</code>方法中加入規則<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/Http/Requests/UpdateBlogPost.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Requests</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Http</span>\<span class="title">FormRequest</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpdateBlogPost</span> <span class="keyword">extends</span> <span class="title">FormRequest</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Determine if the user is authorized to make this request.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">authorize</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the validation rules that apply to the request.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'title'</span> =&gt; <span class="string">'required|max:255'</span>,</span><br><span class="line">            <span class="string">'content'</span> =&gt; <span class="string">'required'</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="客製化錯誤訊息"><a href="#客製化錯誤訊息" class="headerlink" title="客製化錯誤訊息"></a>客製化錯誤訊息</h4><p>加入<code>messages</code>方法<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the error messages for the defined validation rules.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">messages</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="string">'title.required'</span> =&gt; <span class="string">'Hey!! A title is required'</span>,</span><br><span class="line">        <span class="string">'content.required'</span>  =&gt; <span class="string">'Hey!! A content is required'</span>,</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="修改控制器"><a href="#修改控制器" class="headerlink" title="修改控制器"></a>修改控制器</h4><p>將<code>Request</code>改成新建的<code>UpdateBlogPost</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">(UpdateBlogPost $request)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//....</span></span><br><span class="line"></span><br><span class="line">    $validated = $request-&gt;validated();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;控制器加入驗證&quot;&gt;&lt;a href=&quot;#控制器加入驗證&quot; class=&quot;headerlink&quot; title=&quot;控制器加入驗證&quot;&gt;&lt;/a&gt;控制器加入驗證&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;tabl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[Laravel筆記]Eloquent Model - Day6</title>
    <link href="http://abler0122.github.io/2018/11/08/%5BLaravel%E7%AD%86%E8%A8%98%5DEloquent-Model/"/>
    <id>http://abler0122.github.io/2018/11/08/[Laravel筆記]Eloquent-Model/</id>
    <published>2018-11-08T11:36:57.000Z</published>
    <updated>2018-11-14T06:50:05.614Z</updated>
    
    <content type="html"><![CDATA[<h2 id="創建Model"><a href="#創建Model" class="headerlink" title="創建Model"></a>創建Model</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:model Article</span><br></pre></td></tr></table></figure><p>可加入參數<code>--migration</code>或<code>--m</code>，生成migration<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:model Article --migration</span><br><span class="line">php artisan make:model Article --m</span><br></pre></td></tr></table></figure></p><h2 id="Model設定"><a href="#Model設定" class="headerlink" title="Model設定"></a>Model設定</h2><h4 id="🔹選擇資料表-table"><a href="#🔹選擇資料表-table" class="headerlink" title="🔹選擇資料表(table)"></a>🔹選擇資料表(table)</h4><p>預設使用的資料表會與Model名稱相同，如不同可自行設定，只要定義變數<code>$table</code>即可。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// app/Article.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $table = <span class="string">'news'</span>; \\ex:選擇news資料表</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="🔹時間戳記-timestamp"><a href="#🔹時間戳記-timestamp" class="headerlink" title="🔹時間戳記(timestamp)"></a>🔹時間戳記(timestamp)</h4><p>Eloquent預設會有<code>create_at</code>和<code>updated_at</code>這兩個欄位，如果不需要，加入<code>$timestamps</code>變數值為<code>false</code>。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// app/Article.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $timestamps = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="使用範例"><a href="#使用範例" class="headerlink" title="使用範例"></a>使用範例</h2><p>範例實作CRUD</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/Http/Controllers/ArticleController.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Article</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取得所有文章。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Article::all();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 建立新的文章。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  Request  $request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">store</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $article = <span class="keyword">new</span> Article;</span><br><span class="line">        </span><br><span class="line">        $article-&gt;title = $request-&gt;title;</span><br><span class="line">        $article-&gt;author = Auth::user()-&gt;name;</span><br><span class="line">        $article-&gt;content = $request-&gt;content;</span><br><span class="line"></span><br><span class="line">        $article-&gt;save();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新文章。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  Request  $request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Article::where(<span class="string">'id'</span>, $request-&gt;id)-&gt;update([</span><br><span class="line">            <span class="string">'title'</span> =&gt; $request-&gt;title,</span><br><span class="line">            <span class="string">'content'</span> =&gt; $request-&gt;content,</span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 刪除文章。</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  Request  $request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Article::find($request-&gt;id)-&gt;delete();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="📓Laravel筆記系列文章"><a href="#📓Laravel筆記系列文章" class="headerlink" title="📓Laravel筆記系列文章"></a>📓Laravel筆記系列文章</h4><ul><li><a href="/2018/02/26/[Laravel筆記]開發環境建置Homestead-Day1/" title="[Laravel筆記]開發環境建置Homestead-Day1">[Laravel筆記]開發環境建置Homestead-Day1</a></li><li><a href="/2018/03/05/[Laravel筆記]路由設定Route-Day2/" title="[Laravel筆記]路由設定Route-Day2">[Laravel筆記]路由設定Route-Day2</a></li><li><a href="/2018/03/26/[Laravel筆記]Blade模板-Day3/" title="[Laravel筆記]Blade模板-Day3">[Laravel筆記]Blade模板-Day3</a></li><li><a href="/2018/05/24/[Laravel筆記]控制器Controller-Day4/" title="[Laravel筆記]控制器Controller-Day4">[Laravel筆記]控制器Controller-Day4</a></li><li><a href="/2018/11/03/[Laravel筆記]資料庫Migration-Day5/" title="[Laravel筆記]資料庫Migration-Day5">[Laravel筆記]資料庫Migration-Day5</a></li><li><a href="/2018/11/08/[Laravel筆記]Eloquent-Model/" title="[Laravel筆記]Eloquent Model - Day6">[Laravel筆記]Eloquent Model - Day6</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;創建Model&quot;&gt;&lt;a href=&quot;#創建Model&quot; class=&quot;headerlink&quot; title=&quot;創建Model&quot;&gt;&lt;/a&gt;創建Model&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[Laravel筆記]資料庫Migration-Day5</title>
    <link href="http://abler0122.github.io/2018/11/03/%5BLaravel%E7%AD%86%E8%A8%98%5D%E8%B3%87%E6%96%99%E5%BA%ABMigration-Day5/"/>
    <id>http://abler0122.github.io/2018/11/03/[Laravel筆記]資料庫Migration-Day5/</id>
    <published>2018-11-03T02:07:39.000Z</published>
    <updated>2018-11-08T06:09:50.459Z</updated>
    
    <content type="html"><![CDATA[<p>Migratoin是用來操作資料庫schema，在團隊開發中，可能會遇到各版本有不同的schema，所以需要去資料庫手動修改schema，非常繁瑣複雜，但使用Migratoin可以簡單的解決此問題。<br><a id="more"></a></p><h2 id="創建Migration"><a href="#創建Migration" class="headerlink" title="創建Migration"></a>創建Migration</h2><p>使用artisan指令創建<code>make:migration</code>，亦可加入參數<code>--create</code>和<code>--table</code>，分別為新增和使用資料表。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:migration create_article_table --create=article</span><br></pre></td></tr></table></figure></p><h2 id="Migration結構"><a href="#Migration結構" class="headerlink" title="Migration結構"></a>Migration結構</h2><p>Migration檔案放置在<code>database/migrations</code>目錄，每個檔案名稱都會包含建立時間。<br><code>up</code>： 增加新的資料表，欄位，索引<br><code>down</code>： </p><h4 id="🔹新增資料表-table"><a href="#🔹新增資料表-table" class="headerlink" title="🔹新增資料表(table)"></a>🔹新增資料表(table)</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Schema::create(<span class="string">'article'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Blueprint $table)</span> </span>&#123;</span><br><span class="line">  $table-&gt;increments(<span class="string">'id'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="🔹重新命名資料表-table"><a href="#🔹重新命名資料表-table" class="headerlink" title="🔹重新命名資料表(table)"></a>🔹重新命名資料表(table)</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Schema::rename($from, $to);</span><br></pre></td></tr></table></figure><h4 id="🔹Drop資料表-table"><a href="#🔹Drop資料表-table" class="headerlink" title="🔹Drop資料表(table)"></a>🔹Drop資料表(table)</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Schema::drop(<span class="string">'article'</span>);</span><br><span class="line">Schema::dropIfExists(<span class="string">'article'</span>);</span><br></pre></td></tr></table></figure><h4 id="🔹欄位-column-型態"><a href="#🔹欄位-column-型態" class="headerlink" title="🔹欄位(column)型態"></a>🔹欄位(column)型態</h4><p>太多了列舉幾個常用的：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$table-&gt;increments(<span class="string">'id'</span>); <span class="comment">//編號</span></span><br><span class="line"></span><br><span class="line">$table-&gt;string(<span class="string">'title'</span>, <span class="number">100</span>); <span class="comment">//VARCHAR</span></span><br><span class="line"></span><br><span class="line">$table-&gt;timestamp(<span class="string">'date'</span>); <span class="comment">//時間戳記</span></span><br></pre></td></tr></table></figure></p><h2 id="完成範例"><a href="#完成範例" class="headerlink" title="完成範例"></a>完成範例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2018_02_10_131015_article.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Schema</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Schema</span>\<span class="title">Blueprint</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Migrations</span>\<span class="title">Migration</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span> <span class="keyword">extends</span> <span class="title">Migration</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Run the migrations.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    Schema::create(<span class="string">'article'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Blueprint $table)</span> </span>&#123;</span><br><span class="line">      $table-&gt;increments(<span class="string">'id'</span>);</span><br><span class="line">      $table-&gt;string(<span class="string">'title'</span>);</span><br><span class="line">      $table-&gt;timestamp(<span class="string">'date'</span>);</span><br><span class="line">      $table-&gt;string(<span class="string">'author'</span>);</span><br><span class="line">      $table-&gt;string(<span class="string">'content'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Reverse the migrations.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">down</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    Schema::dropIfExists(<span class="string">'article'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="執行Migration"><a href="#執行Migration" class="headerlink" title="執行Migration"></a>執行Migration</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan migrate</span><br></pre></td></tr></table></figure><h4 id="📓Laravel筆記系列文章"><a href="#📓Laravel筆記系列文章" class="headerlink" title="📓Laravel筆記系列文章"></a>📓Laravel筆記系列文章</h4><ul><li><a href="/2018/02/26/[Laravel筆記]開發環境建置Homestead-Day1/" title="[Laravel筆記]開發環境建置Homestead-Day1">[Laravel筆記]開發環境建置Homestead-Day1</a></li><li><a href="/2018/03/05/[Laravel筆記]路由設定Route-Day2/" title="[Laravel筆記]路由設定Route-Day2">[Laravel筆記]路由設定Route-Day2</a></li><li><a href="/2018/03/26/[Laravel筆記]Blade模板-Day3/" title="[Laravel筆記]Blade模板-Day3">[Laravel筆記]Blade模板-Day3</a></li><li><a href="/2018/05/24/[Laravel筆記]控制器Controller-Day4/" title="[Laravel筆記]控制器Controller-Day4">[Laravel筆記]控制器Controller-Day4</a></li><li><a href="/2018/11/03/[Laravel筆記]資料庫Migration-Day5/" title="[Laravel筆記]資料庫Migration-Day5">[Laravel筆記]資料庫Migration-Day5</a></li><li><a href="/2018/11/08/[Laravel筆記]Eloquent-Model/" title="[Laravel筆記]Eloquent Model - Day6">[Laravel筆記]Eloquent Model - Day6</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Migratoin是用來操作資料庫schema，在團隊開發中，可能會遇到各版本有不同的schema，所以需要去資料庫手動修改schema，非常繁瑣複雜，但使用Migratoin可以簡單的解決此問題。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[CodeIgniter]初訪CodeIgniter4.0.0-Alpha.1</title>
    <link href="http://abler0122.github.io/2018/10/23/%5BCodeIgniter%5D%E5%88%9D%E8%A8%AACodeIgniter4.0.0-Alpha.1/"/>
    <id>http://abler0122.github.io/2018/10/23/[CodeIgniter]初訪CodeIgniter4.0.0-Alpha.1/</id>
    <published>2018-10-23T03:36:59.000Z</published>
    <updated>2018-11-14T07:35:30.629Z</updated>
    
    <content type="html"><![CDATA[<p>CodeIgniter4終於釋出alpha版囉!!!<br><a id="more"></a><br>在上個月(09/28)，CodeIgniter悄悄的釋出4.0.0-alpha.1的版本，已經用CodeIgniter3開發多個專案的老麵偶期待很久了啦，雖然目前是alpha版本非正式版，但老麵偶就是要來搶先看看啦。</p><h2 id="需要使用PHP-7-1以上"><a href="#需要使用PHP-7-1以上" class="headerlink" title="需要使用PHP 7.1以上"></a>需要使用PHP 7.1以上</h2><p>CodeIgniter4需要使用PHP 7.1以上版本，如果是從CodeIgniter3升級的話要特別注意PHP5跟7語法差異喔，另外還需要幾個PHP extension，至於Database的部分目前只有支援MySQL(5.1+)、PostgreSQL、SqLite3。</p><ul><li>PHP 7.1</li><li>PHP extension<ul><li>php-json</li><li>php-mbstring</li><li>php-mysqlnd</li><li>php-xml</li></ul></li><li>Database<ul><li>MySQL(5.1+)</li><li>PostgreSQL</li><li>SqLite3</li></ul></li></ul><h2 id="使用Composer安裝"><a href="#使用Composer安裝" class="headerlink" title="使用Composer安裝"></a>使用Composer安裝</h2><p>除了用老方法直接下載壓縮檔也可以使用Composer。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project codeigniter4/framework</span><br></pre></td></tr></table></figure></p><h2 id="index-php-搬到public目錄"><a href="#index-php-搬到public目錄" class="headerlink" title="index.php 搬到public目錄"></a>index.php 搬到public目錄</h2><p>目錄結構變化許多，在根目錄的部分增加 <code>public</code> 、<code>writable</code>，<code>index.php</code>搬到<code>public</code>裡面(大家記得啊不要找不到它了XD)，另外<code>application</code>中所有目錄的開頭字母改成大寫了!?，CSS、JavaScript或圖片等一併放置<code>public</code>，<code>writable</code>則是提供寫入的權限，使用手冊改名為<code>docs</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/</span><br><span class="line">    /application</span><br><span class="line">        /Config</span><br><span class="line">        /Controllers</span><br><span class="line">        /Helpers</span><br><span class="line">        /Language</span><br><span class="line">        /Libraries</span><br><span class="line">        /Models</span><br><span class="line">        /Views</span><br><span class="line">    /system</span><br><span class="line">    /public</span><br><span class="line">    /writable</span><br><span class="line">    /tests</span><br><span class="line">    /docs</span><br></pre></td></tr></table></figure></p><h2 id="namespace"><a href="#namespace" class="headerlink" title="namespace"></a>namespace</h2><p>終於用namespace了！！</p><h2 id="支援-env設定檔"><a href="#支援-env設定檔" class="headerlink" title="支援.env設定檔"></a>支援.env設定檔</h2><p>環境的設定可不用再以已往的方式，到<code>config</code>目錄一個個修改了，現在支援.env設定檔。</p><h2 id="期待正式版囉"><a href="#期待正式版囉" class="headerlink" title="期待正式版囉"></a>期待正式版囉</h2><p>大概跟大家分享到這邊囉，雖然還不知道正式版本會在什麼時後看到，希望老麵有生之年可以看到(誤，總而言之期待正式版釋出的那一天囉!!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CodeIgniter4終於釋出alpha版囉!!!&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[Laravel筆記]控制器Controller-Day4</title>
    <link href="http://abler0122.github.io/2018/05/24/%5BLaravel%E7%AD%86%E8%A8%98%5D%E6%8E%A7%E5%88%B6%E5%99%A8Controller-Day4/"/>
    <id>http://abler0122.github.io/2018/05/24/[Laravel筆記]控制器Controller-Day4/</id>
    <published>2018-05-24T06:51:32.000Z</published>
    <updated>2018-11-08T06:42:28.116Z</updated>
    
    <content type="html"><![CDATA[<h2 id="建立控制器"><a href="#建立控制器" class="headerlink" title="建立控制器"></a>建立控制器</h2><p>控制器(Controller)存放在 <code>app/Http/Controllers</code> 的目錄下，除了在目錄新增外，我們也可以使用Artisan指令新增控制器，例如新增名稱為PostsController的控制器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:controller PostsController</span><br></pre></td></tr></table></figure><h2 id="定義控制器"><a href="#定義控制器" class="headerlink" title="定義控制器"></a>定義控制器</h2><p>依照上面指令執行完成後，在 <code>app/Http/Controllers</code> 目錄中會多一個 <code>PostsController.php</code> ，打開它吧~</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PostsController.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PostsController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下加入一些方法(Method)，回傳View<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// PostsController.php</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PostsController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> view(<span class="string">'welcome'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="📓Laravel筆記系列文章"><a href="#📓Laravel筆記系列文章" class="headerlink" title="📓Laravel筆記系列文章"></a>📓Laravel筆記系列文章</h4><ul><li><a href="/2018/02/26/[Laravel筆記]開發環境建置Homestead-Day1/" title="[Laravel筆記]開發環境建置Homestead-Day1">[Laravel筆記]開發環境建置Homestead-Day1</a></li><li><a href="/2018/03/05/[Laravel筆記]路由設定Route-Day2/" title="[Laravel筆記]路由設定Route-Day2">[Laravel筆記]路由設定Route-Day2</a></li><li><a href="/2018/03/26/[Laravel筆記]Blade模板-Day3/" title="[Laravel筆記]Blade模板-Day3">[Laravel筆記]Blade模板-Day3</a></li><li><a href="/2018/05/24/[Laravel筆記]控制器Controller-Day4/" title="[Laravel筆記]控制器Controller-Day4">[Laravel筆記]控制器Controller-Day4</a></li><li><a href="/2018/11/03/[Laravel筆記]資料庫Migration-Day5/" title="[Laravel筆記]資料庫Migration-Day5">[Laravel筆記]資料庫Migration-Day5</a></li><li><a href="/2018/11/08/[Laravel筆記]Eloquent-Model/" title="[Laravel筆記]Eloquent Model - Day6">[Laravel筆記]Eloquent Model - Day6</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;建立控制器&quot;&gt;&lt;a href=&quot;#建立控制器&quot; class=&quot;headerlink&quot; title=&quot;建立控制器&quot;&gt;&lt;/a&gt;建立控制器&lt;/h2&gt;&lt;p&gt;控制器(Controller)存放在 &lt;code&gt;app/Http/Controllers&lt;/code&gt; 的目錄下，
      
    
    </summary>
    
    
      <category term="Laravel" scheme="http://abler0122.github.io/tags/Laravel/"/>
    
  </entry>
  
  <entry>
    <title>[Laravel筆記]Blade模板-Day3</title>
    <link href="http://abler0122.github.io/2018/03/26/%5BLaravel%E7%AD%86%E8%A8%98%5DBlade%E6%A8%A1%E6%9D%BF-Day3/"/>
    <id>http://abler0122.github.io/2018/03/26/[Laravel筆記]Blade模板-Day3/</id>
    <published>2018-03-26T04:33:41.000Z</published>
    <updated>2018-11-08T06:09:39.732Z</updated>
    
    <content type="html"><![CDATA[<p>Blade模板放置於<code>resources/views</code>資料夾中，檔案副檔名為<code>.blade.php</code>。<br><a id="more"></a></p><h2 id="回傳資料"><a href="#回傳資料" class="headerlink" title="回傳資料"></a>回傳資料</h2><p>如果要回傳資料，像是PHP的echo，使用兩個大括號包覆<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; $var &#125;&#125; <span class="comment">// <span class="meta">&lt;?php</span> echo $var; <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></p><h2 id="模板繼承"><a href="#模板繼承" class="headerlink" title="模板繼承"></a>模板繼承</h2><p>在做頁面的時候我們會將頁面中相同的部分(區塊)切成模板，這樣容易修改、維護。</p><h4 id="🔹定義頁面layout"><a href="#🔹定義頁面layout" class="headerlink" title="🔹定義頁面layout"></a>🔹定義頁面layout</h4><p>以下範例是原始的HTML</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>老麵全端航海誌 首頁<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在不同的頁面nav跟footer是相同不變的，所以做成layout，<br><code>@yield</code>是指定被用來顯示給定區塊的內容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- resources/views/layouts/master.blade.php --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>老麵全端航海誌 @yield('title')<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">      @yield('content')</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="🔹繼承頁面layout"><a href="#🔹繼承頁面layout" class="headerlink" title="🔹繼承頁面layout"></a>🔹繼承頁面layout</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- resources/views/index.blade.php --&gt;</span><br><span class="line"></span><br><span class="line">@extends(<span class="string">'layouts.master'</span>) <span class="comment">// 繼承master模板</span></span><br><span class="line"></span><br><span class="line">@section(<span class="string">'title'</span>, <span class="string">'首頁'</span>)</span><br><span class="line"></span><br><span class="line">@section(<span class="string">'content'</span>)</span><br><span class="line"></span><br><span class="line">    &lt;p&gt;主要內容區塊&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">@endsection</span><br></pre></td></tr></table></figure><h2 id="控制結構"><a href="#控制結構" class="headerlink" title="控制結構"></a>控制結構</h2><h4 id="🔹條件式"><a href="#🔹條件式" class="headerlink" title="🔹條件式"></a>🔹條件式</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">if</span> (count($data) == <span class="number">1</span>)</span><br><span class="line">    <span class="comment">// 一筆資料</span></span><br><span class="line">@<span class="keyword">elseif</span> (count($data) &gt; <span class="number">1</span>)</span><br><span class="line">    <span class="comment">// 多條資料</span></span><br><span class="line">@<span class="keyword">else</span></span><br><span class="line">    <span class="comment">// 沒有任何資料</span></span><br><span class="line">@<span class="keyword">endif</span></span><br></pre></td></tr></table></figure><h4 id="🔹迴圈"><a href="#🔹迴圈" class="headerlink" title="🔹迴圈"></a>🔹迴圈</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">10</span>; $i++)</span><br><span class="line">  &#123;&#123; $i &#125;&#125;</span><br><span class="line">@<span class="keyword">endfor</span></span><br><span class="line"></span><br><span class="line">@<span class="keyword">foreach</span> ($users <span class="keyword">as</span> $user)</span><br><span class="line">  &#123;&#123; $user-&gt;id &#125;&#125;</span><br><span class="line">@<span class="keyword">endforeach</span></span><br><span class="line"></span><br><span class="line">@forelse ($users <span class="keyword">as</span> $user)</span><br><span class="line">  &#123;&#123; $user-&gt;name &#125;&#125;</span><br><span class="line">@<span class="keyword">empty</span></span><br><span class="line">  <span class="comment">// 沒有使用者</span></span><br><span class="line">@endforelse</span><br><span class="line"></span><br><span class="line">@<span class="keyword">while</span> (<span class="keyword">true</span>)</span><br><span class="line">  <span class="comment">// while迴圈</span></span><br><span class="line">@<span class="keyword">endwhile</span></span><br></pre></td></tr></table></figure><h4 id="📓Laravel筆記系列文章"><a href="#📓Laravel筆記系列文章" class="headerlink" title="📓Laravel筆記系列文章"></a>📓Laravel筆記系列文章</h4><ul><li><a href="/2018/02/26/[Laravel筆記]開發環境建置Homestead-Day1/" title="[Laravel筆記]開發環境建置Homestead-Day1">[Laravel筆記]開發環境建置Homestead-Day1</a></li><li><a href="/2018/03/05/[Laravel筆記]路由設定Route-Day2/" title="[Laravel筆記]路由設定Route-Day2">[Laravel筆記]路由設定Route-Day2</a></li><li><a href="/2018/03/26/[Laravel筆記]Blade模板-Day3/" title="[Laravel筆記]Blade模板-Day3">[Laravel筆記]Blade模板-Day3</a></li><li><a href="/2018/05/24/[Laravel筆記]控制器Controller-Day4/" title="[Laravel筆記]控制器Controller-Day4">[Laravel筆記]控制器Controller-Day4</a></li><li><a href="/2018/11/03/[Laravel筆記]資料庫Migration-Day5/" title="[Laravel筆記]資料庫Migration-Day5">[Laravel筆記]資料庫Migration-Day5</a></li><li><a href="/2018/11/08/[Laravel筆記]Eloquent-Model/" title="[Laravel筆記]Eloquent Model - Day6">[Laravel筆記]Eloquent Model - Day6</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Blade模板放置於&lt;code&gt;resources/views&lt;/code&gt;資料夾中，檔案副檔名為&lt;code&gt;.blade.php&lt;/code&gt;。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[Laravel筆記]路由設定Route-Day2</title>
    <link href="http://abler0122.github.io/2018/03/05/%5BLaravel%E7%AD%86%E8%A8%98%5D%E8%B7%AF%E7%94%B1%E8%A8%AD%E5%AE%9ARoute-Day2/"/>
    <id>http://abler0122.github.io/2018/03/05/[Laravel筆記]路由設定Route-Day2/</id>
    <published>2018-03-05T05:11:11.000Z</published>
    <updated>2018-11-14T06:24:33.824Z</updated>
    
    <content type="html"><![CDATA[<p>Laravel路由設定-📓筆記<br><a id="more"></a></p><h2 id="設定檔位置"><a href="#設定檔位置" class="headerlink" title="設定檔位置"></a>設定檔位置</h2><p>所有Laravel路由的設定都是在<code>routes/web.php</code>檔案中，另外<code>routes/api.php</code>是用來設定API路由</p><h2 id="定義路由"><a href="#定義路由" class="headerlink" title="定義路由"></a>定義路由</h2><p>在設定檔中可以看到已經有預設的路由，依照上次的環境設定<a href="/2018/02/26/[航向Laravel]開發環境建置Homestead-Day1/" title="[航向Laravel]開發環境建置Homestead-Day1">([航向Laravel]開發環境建置Homestead-Day1)</a>IP是<code>192.168.10.1</code>，所以用瀏覽器開啟連結<code>http://192.168.10.10/</code>可以看到Laravel歡迎頁面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">'welcome'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="路由動詞"><a href="#路由動詞" class="headerlink" title="路由動詞"></a>路由動詞</h2><p>當然可以使用HTTP動詞，如果需要一次用到多個動詞，<code>any</code>或是 <code>match</code>是個好選擇<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;&#125;);</span><br><span class="line"></span><br><span class="line">Route::post(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;&#125;);</span><br><span class="line"></span><br><span class="line">Route::put(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;&#125;);</span><br><span class="line"></span><br><span class="line">Route::delete(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;&#125;);</span><br><span class="line"></span><br><span class="line">Route::any(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;&#125;);</span><br><span class="line"></span><br><span class="line">Route::match([<span class="string">'get'</span>, <span class="string">'post'</span>], <span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;&#125;);</span><br></pre></td></tr></table></figure></p><h2 id="回傳View"><a href="#回傳View" class="headerlink" title="回傳View"></a>回傳View</h2><p>只要在funtion中，加入<code>return view()</code>並指定模版，就可以回傳View<br>View的模板是放在<code>resources/views/</code>目錄底下，預設會有個<code>welcome.blade.php</code>是歡迎頁面的模板</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">'welcome'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="搭配控制器使用"><a href="#搭配控制器使用" class="headerlink" title="搭配控制器使用"></a>搭配控制器使用</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>, <span class="string">'controller@index'</span>); <span class="comment">// &#123;控制器名稱&#125;@&#123;控制器的方法&#125;</span></span><br></pre></td></tr></table></figure><h2 id="加入路由參數"><a href="#加入路由參數" class="headerlink" title="加入路由參數"></a>加入路由參數</h2><p>例如：取得指定文章編號(id)<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'posts/&#123;id&#125;'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($id)</span> </span>&#123;&#125;);</span><br></pre></td></tr></table></figure></p><p>多個參數<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'posts/&#123;date&#125;/&#123;id&#125;/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($date, $id)</span> </span>&#123;&#125;);</span><br></pre></td></tr></table></figure></p><h2 id="路由命名"><a href="#路由命名" class="headerlink" title="路由命名"></a>路由命名</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">'welcome'</span>);</span><br><span class="line">&#125;)-&gt;name(<span class="string">'index'</span>);</span><br></pre></td></tr></table></figure><p>有參數<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'posts/&#123;id&#125;'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($id)</span> </span>&#123;&#125;)-&gt;name(<span class="string">'posts.show'</span>);</span><br><span class="line"></span><br><span class="line">$url = route(<span class="string">'posts.show'</span>, [<span class="string">'id'</span> =&gt; <span class="number">6</span>]);</span><br></pre></td></tr></table></figure></p><h4 id="📓Laravel筆記系列文章"><a href="#📓Laravel筆記系列文章" class="headerlink" title="📓Laravel筆記系列文章"></a>📓Laravel筆記系列文章</h4><ul><li><a href="/2018/02/26/[Laravel筆記]開發環境建置Homestead-Day1/" title="[Laravel筆記]開發環境建置Homestead-Day1">[Laravel筆記]開發環境建置Homestead-Day1</a></li><li><a href="/2018/03/05/[Laravel筆記]路由設定Route-Day2/" title="[Laravel筆記]路由設定Route-Day2">[Laravel筆記]路由設定Route-Day2</a></li><li><a href="/2018/03/26/[Laravel筆記]Blade模板-Day3/" title="[Laravel筆記]Blade模板-Day3">[Laravel筆記]Blade模板-Day3</a></li><li><a href="/2018/05/24/[Laravel筆記]控制器Controller-Day4/" title="[Laravel筆記]控制器Controller-Day4">[Laravel筆記]控制器Controller-Day4</a></li><li><a href="/2018/11/03/[Laravel筆記]資料庫Migration-Day5/" title="[Laravel筆記]資料庫Migration-Day5">[Laravel筆記]資料庫Migration-Day5</a></li><li><a href="/2018/11/08/[Laravel筆記]Eloquent-Model/" title="[Laravel筆記]Eloquent Model - Day6">[Laravel筆記]Eloquent Model - Day6</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Laravel路由設定-📓筆記&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[Laravel筆記]開發環境建置Homestead-Day1</title>
    <link href="http://abler0122.github.io/2018/02/26/%5BLaravel%E7%AD%86%E8%A8%98%5D%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AEHomestead-Day1/"/>
    <id>http://abler0122.github.io/2018/02/26/[Laravel筆記]開發環境建置Homestead-Day1/</id>
    <published>2018-02-26T07:18:48.000Z</published>
    <updated>2018-11-08T06:10:01.526Z</updated>
    
    <content type="html"><![CDATA[<p>Laravel提供快速方便的環境建置方式-Homestead<br><a id="more"></a></p><h2 id="Homestead預設環境"><a href="#Homestead預設環境" class="headerlink" title="Homestead預設環境"></a>Homestead預設環境</h2><ul><li>Ubuntu 14.04</li><li>Git</li><li>PHP 5.6 / 7.0</li><li>Nginx</li><li>MySQL<br>……</li></ul><h2 id="安裝Homestead"><a href="#安裝Homestead" class="headerlink" title="安裝Homestead"></a>安裝Homestead</h2><p>首先下載/安裝好VirtualBox或是VMWare，之後在安裝Vagrant。<br>接下來安裝Vagrant Box，在終端機執行下列指令，通常會需要一段時間可以先去睡😴😴😴<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant box add laravel/homestead</span><br></pre></td></tr></table></figure></p><p>下載Homestead的Vagrant設定檔，用Git clone下來<a href="/2017/12/13/[Git]如果Git能夠喚回曾經的code-Git版本控制入門篇/" title="如果Git能夠喚回曾經的code-Git版本控制入門篇">(如果Git能夠喚回曾經的code-Git版本控制入門篇)</a>，並執行init.bat / init.sh，產生Hometestead.yaml<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/laravel/homestead.git Homestead</span><br></pre></td></tr></table></figure></p><h2 id="設定Homestead檔"><a href="#設定Homestead檔" class="headerlink" title="設定Homestead檔"></a>設定Homestead檔</h2><p>Hometestead.yaml是用來設定環境的配置</p><ul><li><p>ip:  設定local端的IP位置</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ip:</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.10</span></span><br></pre></td></tr></table></figure></li><li><p>memory: 配給虛擬機記憶體的大小</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">memory:</span> <span class="number">2048</span></span><br></pre></td></tr></table></figure></li><li><p>cpus: 配給虛擬機CPU的個數</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cpus:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>provider: Vagrant的提供者</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">provider:</span> <span class="string">virtualbox</span></span><br></pre></td></tr></table></figure></li><li><p>authorize: ssh key位置</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">authorize:</span> <span class="string">~/.ssh/id_rsa.pub</span></span><br></pre></td></tr></table></figure></li><li><p>folders: 設定共享目錄</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">folders:</span></span><br><span class="line"><span class="attr">    - map:</span> <span class="attr">C:\code\</span></span><br><span class="line"><span class="attr">    to:</span> <span class="string">/home/vagrant/code/</span></span><br></pre></td></tr></table></figure></li><li><p>sites: 設定網域與共享目錄</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sites:</span></span><br><span class="line"><span class="attr">    - map:</span> <span class="string">homestead.test</span></span><br><span class="line"><span class="attr">    to:</span> <span class="string">/home/vagrant/code/public</span></span><br></pre></td></tr></table></figure></li><li><p>port: 轉port設定</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ports:</span></span><br><span class="line"><span class="attr">    - send:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    to:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="啟動Vagrant囉"><a href="#啟動Vagrant囉" class="headerlink" title="啟動Vagrant囉~"></a>啟動Vagrant囉~</h2><p>在Homestead目錄下輸入指令啟動Vagrant<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Vagrant</span> <span class="string">up</span></span><br></pre></td></tr></table></figure></p><p>遠端連線<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Vagrant</span> <span class="string">ssh</span></span><br></pre></td></tr></table></figure></p><p>建立Laravel專案<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">laravel</span> <span class="string">new</span> <span class="string">專案名稱</span></span><br></pre></td></tr></table></figure></p><h4 id="📓Laravel筆記系列文章"><a href="#📓Laravel筆記系列文章" class="headerlink" title="📓Laravel筆記系列文章"></a>📓Laravel筆記系列文章</h4><ul><li><a href="/2018/02/26/[Laravel筆記]開發環境建置Homestead-Day1/" title="[Laravel筆記]開發環境建置Homestead-Day1">[Laravel筆記]開發環境建置Homestead-Day1</a></li><li><a href="/2018/03/05/[Laravel筆記]路由設定Route-Day2/" title="[Laravel筆記]路由設定Route-Day2">[Laravel筆記]路由設定Route-Day2</a></li><li><a href="/2018/03/26/[Laravel筆記]Blade模板-Day3/" title="[Laravel筆記]Blade模板-Day3">[Laravel筆記]Blade模板-Day3</a></li><li><a href="/2018/05/24/[Laravel筆記]控制器Controller-Day4/" title="[Laravel筆記]控制器Controller-Day4">[Laravel筆記]控制器Controller-Day4</a></li><li><a href="/2018/11/03/[Laravel筆記]資料庫Migration-Day5/" title="[Laravel筆記]資料庫Migration-Day5">[Laravel筆記]資料庫Migration-Day5</a></li><li><a href="/2018/11/08/[Laravel筆記]Eloquent-Model/" title="[Laravel筆記]Eloquent Model - Day6">[Laravel筆記]Eloquent Model - Day6</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Laravel提供快速方便的環境建置方式-Homestead&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[Git]如果Git能夠喚回曾經的code-Git版本控制入門篇</title>
    <link href="http://abler0122.github.io/2017/12/13/%5BGit%5D%E5%A6%82%E6%9E%9CGit%E8%83%BD%E5%A4%A0%E5%96%9A%E5%9B%9E%E6%9B%BE%E7%B6%93%E7%9A%84code-Git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%85%A5%E9%96%80%E7%AF%87/"/>
    <id>http://abler0122.github.io/2017/12/13/[Git]如果Git能夠喚回曾經的code-Git版本控制入門篇/</id>
    <published>2017-12-13T12:22:26.000Z</published>
    <updated>2018-10-30T13:36:42.352Z</updated>
    
    <content type="html"><![CDATA[<p>使用Git可以讓時光倒回🕑 ，喚回曾經你/妳的code。<br><a id="more"></a></p><h2 id="什麼是Git"><a href="#什麼是Git" class="headerlink" title="什麼是Git?"></a>什麼是Git?</h2><p>Git出自於Linux之父”Linux Torbalds”在開發Linux kernel的時候，設計出來版本控制系統，當時的版本控制系統大多屬於集中式版本控制系統 (Centralized Version Control Systems，簡稱CVCSs)，Git的話是屬於分散式版本控制系統 (Distributed Version Control Systems, 簡稱DVCSs) ，什麼是集中式版本控制系統跟散式版本控制系統 就自己去研究吧。目前大多數的開放原始碼專案、儲存庫都是採用Git，像是知名的可以沒有女友，但不可以沒有的Github，還有Bitbucket、Gitlab，所以Git已經算是必學的工具了。</p><h2 id="為何要用Git"><a href="#為何要用Git" class="headerlink" title="為何要用Git?"></a>為何要用Git?</h2><p>為何要用Git呢?，像剛剛說的大多數專案都採用Git，當然要好好的學一下。 另外大家想想以往在做報告、作業的時候是如何管理版本、整合整組的報告，絕大多數的人應該都是把檔案複製一份放在用日期或是版本命名的目錄，這種做法很簡單，但是沒辦法容易看出版本的差異跟有效的管理。如果使用Git，它可以紀錄版本的差異，還有版本之間合併、時光倒回🕑的功能。</p><h2 id="如何使用Git"><a href="#如何使用Git" class="headerlink" title="如何使用Git?"></a>如何使用Git?</h2><p>首先要安裝Git，選擇你/妳使用的作業系統版本下載&amp;安裝。安裝完後要設定使用者名稱跟信箱才可以使用，之後提交的版本都會使用這些資訊，開啟Git bash輸入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"使用者名稱(前後要加雙引號)"</span></span><br><span class="line">$ git config --global user.email 信箱</span><br></pre></td></tr></table></figure><h4 id="🔹初始化"><a href="#🔹初始化" class="headerlink" title="🔹初始化"></a>🔹初始化</h4><p>如果想要使用Git在某資料中，需要進入該資料夾然後輸入以下指令，該指令會建立一個.git的資料夾，裡面是放著紀錄的檔案：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><h4 id="🔹查看狀態"><a href="#🔹查看狀態" class="headerlink" title="🔹查看狀態"></a>🔹查看狀態</h4><p>如果在資料夾中新增或是修改檔案，可以用指令查看狀態：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><h4 id="🔹提交版本"><a href="#🔹提交版本" class="headerlink" title="🔹提交版本"></a>🔹提交版本</h4><p>若要提交版本需要先將檔案加入追蹤，後才能提交版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add 檔案或資料夾名稱(可以輸入 ./ 選擇全部檔案)</span><br><span class="line">$ git commit -m <span class="string">"版本訊息"</span></span><br></pre></td></tr></table></figure><div class="tip"><br>建議在每次使用Git指令時，先查看目前狀態，再三確認過才進行下一步<br></div><h4 id="🔹查看版本紀錄"><a href="#🔹查看版本紀錄" class="headerlink" title="🔹查看版本紀錄"></a>🔹查看版本紀錄</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><div class="tip"><br>輸入q離開喔<br></div><h4 id="🔹建立-amp-切換分支"><a href="#🔹建立-amp-切換分支" class="headerlink" title="🔹建立&amp;切換分支"></a>🔹建立&amp;切換分支</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git branch 要建立的分支名稱</span><br><span class="line">$ git checkout  分支名稱</span><br></pre></td></tr></table></figure><h4 id="🔹克隆-clone-遠端儲存庫"><a href="#🔹克隆-clone-遠端儲存庫" class="headerlink" title="🔹克隆(clone)遠端儲存庫"></a>🔹克隆(clone)遠端儲存庫</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> 遠端儲存庫</span><br></pre></td></tr></table></figure><h4 id="🔹上傳-更新版本"><a href="#🔹上傳-更新版本" class="headerlink" title="🔹上傳/更新版本"></a>🔹上傳/更新版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin 分支名稱</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure><h4 id="🔹合併版本"><a href="#🔹合併版本" class="headerlink" title="🔹合併版本"></a>🔹合併版本</h4><p>先切換到要合併進來的分支，然後執行以下指令，例如：A合併到B，要先切換到B分支，執行git merge A</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge 分支名稱</span><br></pre></td></tr></table></figure><h2 id="WTF-😵所以如何在團隊開發中使用Git"><a href="#WTF-😵所以如何在團隊開發中使用Git" class="headerlink" title="WTF???😵所以如何在團隊開發中使用Git"></a>WTF???😵所以如何在團隊開發中使用Git</h2><p>如果是小專案或是專題，可以嘗試使用Github Flow，這就先自己去研究😜，之後在分享囉🍻~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用Git可以讓時光倒回🕑 ，喚回曾經你/妳的code。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[老麵遊記]Web祭之高雄一日遊</title>
    <link href="http://abler0122.github.io/2017/11/19/%5B%E8%80%81%E9%BA%B5%E9%81%8A%E8%A8%98%5DWeb%E7%A5%AD%E4%B9%8B%E9%AB%98%E9%9B%84%E4%B8%80%E6%97%A5%E9%81%8A/"/>
    <id>http://abler0122.github.io/2017/11/19/[老麵遊記]Web祭之高雄一日遊/</id>
    <published>2017-11-19T12:55:38.000Z</published>
    <updated>2018-11-03T07:57:12.844Z</updated>
    
    <content type="html"><![CDATA[<p>出征高雄參加Web祭<br><a id="more"></a></p><h2 id="活動資訊"><a href="#活動資訊" class="headerlink" title="活動資訊"></a>活動資訊</h2><p>名稱：Web matsuri 。Web祭<br>時間：2017/11/19 13:00<br>地點：Dakuo 高雄市數位內容創意中心</p><h2 id="出征"><a href="#出征" class="headerlink" title="出征"></a>出征</h2><p>一大早天未亮就搭上高鐵前往高雄，抵達後在鹽埕區四處晃晃碰巧看到丹丹漢堡，吃完丹丹漢堡休息一會兒就前往活動會場，活動會場在Dakuo 高雄市數位內容創意中心，在路途中可以看到高雄港的門牌，吹著海風讓我想起閃靈皇軍的歌詞「大港起風湧，堂堂男兒欲出征，氣勢撼動高雄，齊開向你我前程」(誤</p><h2 id="抵達會場"><a href="#抵達會場" class="headerlink" title="抵達會場"></a>抵達會場</h2><p>進入活動會場，會場的佈置如同日本祭典一般，工作人員都穿著和服，舞台前還有一大甕清酒(想喝XD，報到完成後領到手冊跟貼紙，等一會活動也差不多開始了。</p><h2 id="議程參與"><a href="#議程參與" class="headerlink" title="議程參與"></a>議程參與</h2><p>活動的議程是採雙軌雙通道，我不會影分身之術，所以一次只能選一個議程參與：</p><h4 id="WebVR-的發展與技術應用-講者：廖洧杰"><a href="#WebVR-的發展與技術應用-講者：廖洧杰" class="headerlink" title="WebVR 的發展與技術應用 - 講者：廖洧杰"></a>WebVR 的發展與技術應用 - 講者：廖洧杰</h4><p>內容大概是介紹WebVR，使用框架webr-boilerplate、aframe.io，Demo是撿金塊蠻有趣的。</p><h4 id="Webduino-很會串-講者：許益祥"><a href="#Webduino-很會串-講者：許益祥" class="headerlink" title="Webduino 很會串 - 講者：許益祥"></a>Webduino 很會串 - 講者：許益祥</h4><p>介紹Webduino，Demo跳舞機器人跟用Webduino玩撿金塊。</p><h4 id="GraphQL-Relay-試玩心得-串起前端與後端的資料橋梁-講者：張博凱"><a href="#GraphQL-Relay-試玩心得-串起前端與後端的資料橋梁-講者：張博凱" class="headerlink" title="GraphQL + Relay 試玩心得 串起前端與後端的資料橋梁 - 講者：張博凱"></a>GraphQL + Relay 試玩心得 串起前端與後端的資料橋梁 - 講者：張博凱</h4><p>最後一個議程，內容太深奧了。</p><h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p>此次從台中遠赴高雄跑了大半個台灣，而晚上因為要趕著回台中，沒能參與到晚上的活動覺得可惜啊，但是喝完打狗啤酒在高雄街道奔跑趕車，也是有個難忘的經驗啦XD。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;出征高雄參加Web祭&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[Coding閒聊]碎碎念&amp;開發工具分享</title>
    <link href="http://abler0122.github.io/2017/09/22/%5BCoding%E9%96%92%E8%81%8A%5D%E7%A2%8E%E7%A2%8E%E5%BF%B5&amp;%E9%96%8B%E7%99%BC%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/"/>
    <id>http://abler0122.github.io/2017/09/22/[Coding閒聊]碎碎念&amp;開發工具分享/</id>
    <published>2017-09-22T07:48:00.000Z</published>
    <updated>2018-10-30T13:34:54.727Z</updated>
    
    <content type="html"><![CDATA[<p>近期開發許久的專案告一段落，來碎念一下😝<br><a id="more"></a></p><h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><p>這次專案別於我以前開發過的網站，以前不外乎都是形象網站，主要是以文章管理、上傳檔案……等等功能，大多來使用網站的人都是用看的，而這次專案比較像是一個應用程式，使用者需登入後才可以看到或查詢自己的資料，還有報名活動，註冊……等等功能,雖然感覺上都是做新增修改刪除讀取的功能啊~，但差別在於需要考慮使用者操作流程順不順暢，還有串接多筆API時會遇到有的API還沒有載入完成並更新UI，就會造成資料不正確或是被回報不穩定。</p><h2 id="使用好的工具效率增倍"><a href="#使用好的工具效率增倍" class="headerlink" title="使用好的工具效率增倍"></a>使用好的工具效率增倍</h2><p>開發網站一定會使用到編輯器，來分享我在使用的工具，我使用的編輯器是Vistual Studio Code搭配GitLen套件， 另外使用三個螢幕(筆電螢幕+外接螢幕+外接螢幕)，我的筆電可以使用HDMI跟VGA可以同時使用， 最後還有一個最重要的東西就是我的Debug神器「泰迪」，別人用黃色小鴨我是用泰迪XD，而且手腕痛時可以當作手腕墊。</p><ul><li>Vistual Studio Code 編輯器<ul><li>GitLen</li></ul></li><li>三螢幕(筆電螢幕 +外接螢幕+外接螢幕)</li><li>泰迪</li></ul><h2 id="碎碎念補充"><a href="#碎碎念補充" class="headerlink" title="碎碎念補充"></a>碎碎念補充</h2><p>在專案中我主要是在開發資料跟畫面串接，在這部分考慮到使用者操作流暢，打算用Ajax非同步讀。取資料的方式，另外我是用jQuery(心裡想：應該用個Vuejs等等前端框架)，但是因為時間很趕，要開發API又要處理前端的部分，所以就先選擇用jQuery日後有機會再來改，其實後來有點後悔，因為沒想到畫面有許多資料要處理，jQuery畢竟只是Library，程式架構跟流程都要自己設計。<br>專案結束後也是在這碎碎念時，開始接觸到Vuejs，回頭看之前寫的jQuery，忘了差不多了…。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近期開發許久的專案告一段落，來碎念一下😝&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
